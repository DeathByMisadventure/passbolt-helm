# -- Used for private repositories
imagePullSecrets: []

postgres:
  # -- Container Name
  name: postgres
  # -- Enable internal postgres database
  enabled: true
  image:
    # -- Image repository
    repository: postgres
    # -- Image tag
    tag: 17-alpine
    # -- Image pull policy
    pullPolicy: IfNotPresent
  # -- Number of pod replicas
  replicas: 1
  # -- Pod assigned resources
  resources:
    limits:
      cpu: 100m
      memory: 1Gi
      ephemeral-storage: "2Gi"
    requests:
      cpu: 100m
      memory: 1Gi
      ephemeral-storage: "2Gi"
  # -- Pod security context
  securityContext:
    seLinuxOptions: {}
    runAsUser: 0
    runAsGroup: 0
    runAsNonRoot: false
    seccompProfile:
      type: RuntimeDefault
  service:
    # -- Service port number
    port: "5432"
  # -- If internal postgres is disabled, the external database hostname
  hostname: "postgres.localdev.me"
  # -- Database name
  database: "passbolt"
  # -- Postgres connection username (Required)
  user:
  # -- Postgres connection password (Required)
  password:
  pvc:
    # -- Postgres PVC storage request size
    storageRequest: 100Mi
    # -- Storage Class Name for a pre-provisioned PV
    storageClassName:
    # -- Selector to match pre-provisioned PV
    selector:
      # matchLabels:
      #   type: postgres-pv

# -- Image pull secrets

passbolt:
  # -- Container Name
  name: passbolt
  image:
    # -- Image repository
    repository: passbolt/passbolt
    # -- Image tag defaults to Chart AppVersion
    tag: latest
    # -- Image pull policy
    pullPolicy: IfNotPresent
  # -- Number of pod replicas
  replicas: 1
  pvc:
    # -- PVC size for the pod data
    storageRequest: 100Mi
  # -- Configuration data passed directly into passbolt pod environment variables as is
  # Additional configuration settings are available at
  # * https://github.com/passbolt/passbolt_api/blob/master/config/default.php
  # * https://github.com/passbolt/passbolt_api/blob/master/config/app.default.php
  # Note: It is recommended to set email options through the GUI once deployed
  config:
    # EMAIL_TRANSPORT_DEFAULT_CLASS_NAME: Smtp # Email classname
    # EMAIL_DEFAULT_FROM: you@localhost # From email address
    # EMAIL_DEFAULT_TRANSPORT: default # Sets transport method
    # EMAIL_TRANSPORT_DEFAULT_HOST: localhost # Server hostname
    # EMAIL_TRANSPORT_DEFAULT_PORT: 25 # Server port
    # EMAIL_TRANSPORT_DEFAULT_TIMEOUT: 30 # Timeout
    # EMAIL_TRANSPORT_DEFAULT_USERNAME: null # Username for email server auth
    # EMAIL_TRANSPORT_DEFAULT_PASSWORD: null # Password for email server auth
    # EMAIL_TRANSPORT_DEFAULT_CLIENT: null # Client
    # EMAIL_TRANSPORT_DEFAULT_TLS: null # Set tls
    # EMAIL_TRANSPORT_DEFAULT_URL: null # Set url
    # GNUPGHOME: /var/lib/passbolt/.gnupg # path to gnupghome directory
    # PASSBOLT_KEY_LENGTH: 3072 # Gpg desired key length
    # PASSBOLT_SUBKEY_LENGTH: 3072 # Gpg desired subkey length
    # PASSBOLT_KEY_NAME: Passbolt default user # Key owner name
    # PASSBOLT_KEY_EMAIL: passbolt@yourdomain.com # Key owner email address
    # PASSBOLT_KEY_EXPIRATION: 0, never expires # Key expiration date
    # PASSBOLT_GPG_SERVER_KEY_FINGERPRINT: null # GnuPG fingerprint
    # PASSBOLT_GPG_SERVER_KEY_FINGERPRINT_FORCE: null # Force calculation of GnuPG fingerprint for server key
    # PASSBOLT_GPG_SERVER_KEY_PUBLIC: /etc/passbolt/gpg/serverkey.asc # Path to GnuPG public server key
    # PASSBOLT_GPG_SERVER_KEY_PRIVATE: /etc/passbolt/gpg/serverkey_private.asc # Path to GnuPG private server key
    # PASSBOLT_PLUGINS_EXPORT_ENABLED: TRUE # Enable export plugin
    # PASSBOLT_PLUGINS_IMPORT_ENABLED: TRUE # Enable import plugin
    # PASSBOLT_REGISTRATION_PUBLIC: FALSE # Defines if users can register
    # PASSBOLT_SECURITY_SET_HEADERS: TRUE # Send CSP Headers
    # SECURITY_SALT: SALT # CakePHP security salt
  # -- Passbolt container service port information
  service:
    name: "http"
    port: 80
    type: ClusterIP
  # -- Pod assigned resources
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 1000m
      memory: 1Gi
      ephemeral-storage: "2Gi"
  # -- Pod security context
  securityContext:
    allowPrivilegeEscalation: true
    # runAsNonRoot: true
    readOnlyRootFilesystem: false
    # capabilities:
    #   drop:
    #     - ALL
    # seccompProfile:
    #   type: RuntimeDefault

# -- Information on setting up the initial admin account
firstAdmin:
  email: admin@domain.com
  firstName: First
  surname: Admin

ingress:
  # -- Enable Ingress
  enabled: true
  # -- Ingress class type
  className: nginx
  # -- Ingress annotations
  annotations:
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # appgw.ingress.kubernetes.io/ssl-redirect: "true"
    # kubernetes.io/ingress.class: azure/application-gateway
    # # Enable for modsecurity through an ingress-nginx snippet
    # nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    # nginx.ingress.kubernetes.io/enable-owasp-core-rules: "true"
    # nginx.ingress.kubernetes.io/modsecurity-transaction-id: "$request_id"
    # nginx.ingress.kubernetes.io/modsecurity-snippet: |
    #   SecRuleEngine On
    #   SecStatusEngine Off
    #   SecAuditLog /dev/stdout
    #   SecAuditLogFormat JSON
    #   SecAuditLogParts ABCFHKZ
    #   SecAuditEngine RelevantOnly
    #   SecPcreMatchLimit 500000
    #   SecPcreMatchLimitRecursion 500000
    #   SecAction "id:900200,phase:1,nolog,pass,t:none,setvar:tx.allowed_methods=GET HEAD POST OPTIONS PUT PATCH DELETE"
    #   SecRuleRemoveById 920440
  # -- ingress external hostname
  hostname: passbolt.localdev.me

  # -- Enable TLS with a specific preconfigured TLS certificate secret
  tls:
    secretName:

ingress-nginx:
  # -- Enable the ingress-nginx module dependency if not enabled in the cluster
  enabled: false
  controller:
    # -- Ingress-NGINX Configuration for MODSECURITY OWASP Protection
    # Comment out this entire section to disable the WAF
    config:
      enable-modsecurity: "true"
      enable-owasp-modsecurity-crs: "true"
      modsecurity-transaction-id: "$request_id"
      modsecurity-snippet: |
        SecRuleEngine On
        SecStatusEngine Off
        SecAuditLog /dev/stdout
        SecAuditLogFormat JSON
        SecAuditLogParts ABCFHKZ
        SecAuditEngine RelevantOnly
        SecPcreMatchLimit 500000
        SecPcreMatchLimitRecursion 500000
        SecAction "id:900200,phase:1,nolog,pass,t:none,setvar:tx.allowed_methods=GET HEAD POST OPTIONS PUT PATCH DELETE"
        SecRuleRemoveById 920440
